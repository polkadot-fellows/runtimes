[package]
authors = ["Encointer <info@encointer.org>"]
description = "Runtime for Encointer Network (kusama system chain)"
edition.workspace = true
homepage = "https://encointer.org"
license.workspace = true
name = 'encointer-kusama-runtime'
repository.workspace = true
version.workspace = true

[dependencies]
codec = { package = "parity-scale-codec", version = "3.6.9", default-features = false, features = [
  "derive",
] }
hex-literal = { optional = true , workspace = true }
log = { workspace = true }
scale-info = { features = [
  "derive",
] , workspace = true }
smallvec = { workspace = true }


# Encointer pallet versioning follows these rules:
# ---------------------------------------------------------------------------------------------
# * major: per polkadot-sdk minor version, always breaking: i.e .
#    * polkadot-sdk-v1.7.0 => encointer-* 6.x.x
#    * polkadot-sdk-v1.8.0 => encointer-* 7.x.x
# * minor: possibly breaking changes in encointer protocol. may require storage migration. i.e
#    * encointer-* 6.1.x (must not be automatically updated from 6.0.x)
# * patch: ad-lib
#
encointer-balances-tx-payment = { workspace = true }
encointer-balances-tx-payment-rpc-runtime-api = { workspace = true }
encointer-primitives = { workspace = true }
pallet-encointer-balances = { workspace = true }
pallet-encointer-bazaar = { workspace = true }
pallet-encointer-bazaar-rpc-runtime-api = { workspace = true }
pallet-encointer-ceremonies = { workspace = true }
pallet-encointer-ceremonies-rpc-runtime-api = { workspace = true }
pallet-encointer-communities = { workspace = true }
pallet-encointer-communities-rpc-runtime-api = { workspace = true }
pallet-encointer-faucet = { workspace = true }
pallet-encointer-reputation-commitments = { workspace = true }
pallet-encointer-scheduler = { workspace = true }


# Substrate
frame-benchmarking = { optional = true, workspace = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { optional = true, workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { optional = true, workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-aura = { features = ["experimental"] , workspace = true }
pallet-balances = { workspace = true }
pallet-collective = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-membership = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-proxy = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-genesis-builder = { workspace = true }

# Polkadot dependencies
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { package = "staging-xcm", default-features = false, version = "8.0.1" }
xcm-builder = { package = "staging-xcm-builder", default-features = false, version = "8.0.1" }
xcm-executor = { package = "staging-xcm-executor", default-features = false, version = "8.0.1" }

# Cumulus dependencies
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { features = [
  "parameterized-consensus-hook",
], workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-utility = { workspace = true }
parachain-info = { package = "staging-parachain-info", default-features = false, version = "0.8.0" }
parachains-common = { workspace = true }
polkadot-core-primitives = { workspace = true }
polkadot-primitives = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { optional = true, workspace = true }

[dev-dependencies]
# The Encointer pallets might not have compatible versions of `polkadot-sdk` with the rest of the system parachains,
# so we need to copy all the contents from `system-parachains-constants` and `kusama-runtime-constants`.
# We use these crates only for testing to ensure compatible values.
# NOTE: Do not add this to the `[dependencies]`
kusama-runtime-constants = { path = "../../relay/kusama/constants" }
system-parachains-constants = { path = "../constants" }

[features]
default = ["std"]
runtime-benchmarks = [
	"cumulus-pallet-dmp-queue/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"hex-literal",
	"pallet-balances/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-encointer-balances/runtime-benchmarks",
	"pallet-encointer-bazaar/runtime-benchmarks",
	"pallet-encointer-ceremonies/runtime-benchmarks",
	"pallet-encointer-communities/runtime-benchmarks",
	"pallet-encointer-faucet/runtime-benchmarks",
	"pallet-encointer-reputation-commitments/runtime-benchmarks",
	"pallet-encointer-scheduler/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"encointer-balances-tx-payment/runtime-benchmarks",
	"encointer-primitives/runtime-benchmarks",
	"pallet-asset-tx-payment/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks"
]
std = [
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"encointer-balances-tx-payment-rpc-runtime-api/std",
	"encointer-balances-tx-payment/std",
	"encointer-primitives/serde_derive",
	"encointer-primitives/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"log/std",
	"pallet-asset-tx-payment/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-collective/std",
	"pallet-encointer-balances/std",
	"pallet-encointer-bazaar-rpc-runtime-api/std",
	"pallet-encointer-bazaar/std",
	"pallet-encointer-ceremonies-rpc-runtime-api/std",
	"pallet-encointer-ceremonies/std",
	"pallet-encointer-communities-rpc-runtime-api/std",
	"pallet-encointer-communities/std",
	"pallet-encointer-faucet/std",
	"pallet-encointer-reputation-commitments/std",
	"pallet-encointer-scheduler/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-message-queue/std",
	"pallet-membership/std",
	"pallet-proxy/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-utility/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parachains-common/std",
	"scale-info/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm/std",
	"frame-benchmarking?/std",
	"frame-system-benchmarking?/std",
	"pallet-scheduler/std",
	"polkadot-core-primitives/std",
	"polkadot-parachain-primitives/std",
	"polkadot-primitives/std",
	"polkadot-runtime-common/std"
]


try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-asset-tx-payment/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-encointer-balances/try-runtime",
	"pallet-encointer-bazaar/try-runtime",
	"pallet-encointer-ceremonies/try-runtime",
	"pallet-encointer-communities/try-runtime",
	"pallet-encointer-faucet/try-runtime",
	"pallet-encointer-reputation-commitments/try-runtime",
	"pallet-encointer-scheduler/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
	"encointer-balances-tx-payment/try-runtime",
	"encointer-primitives/try-runtime",
	"frame-support/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"sp-runtime/try-runtime"
]

# A feature that should be enabled when the runtime should be built for on-chain
# deployment. This will disable stuff that shouldn't be part of the on-chain wasm
# to make it smaller, like logging for example.
on-chain-release-build = ["sp-api/disable-logging"]

