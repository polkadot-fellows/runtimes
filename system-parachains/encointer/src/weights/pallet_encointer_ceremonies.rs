
//! Autogenerated weights for `pallet_encointer_ceremonies`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-31, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `caribe`, CPU: `12th Gen Intel(R) Core(TM) i7-1260P`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("encointer-rococo-local-dev"), DB CACHE: 1024

// Executed Command:
// target/release/encointer-collator
// benchmark
// pallet
// --chain=encointer-rococo-local-dev
// --steps=50
// --repeat=20
// --pallet=pallet_encointer_ceremonies
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=polkadot-parachains/encointer-runtime/src/weights/pallet_encointer_ceremonies.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_encointer_ceremonies`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_encointer_ceremonies::WeightInfo for WeightInfo<T> {
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCommunities CommunityIdentifiers (r:1 w:0)
	/// Proof: EncointerCommunities CommunityIdentifiers (max_values: Some(1), max_size: Some(90002), added: 90497, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseeIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies EndorseeIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies NewbieIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputationLifetime (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputationLifetime (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ParticipantReputation (r:1 w:2)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCommunities Bootstrappers (r:1 w:0)
	/// Proof: EncointerCommunities Bootstrappers (max_values: None, max_size: Some(320027), added: 322502, mode: MaxEncodedLen)
	/// Storage: EncointerBalances TotalIssuance (r:1 w:0)
	/// Proof: EncointerBalances TotalIssuance (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	/// Storage: EncointerBalances DemurragePerBlock (r:1 w:0)
	/// Proof: EncointerBalances DemurragePerBlock (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies ReputableCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableRegistry (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	fn register_participant() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `862`
		//  Estimated: `323492`
		// Minimum execution time: 141_377_000 picoseconds.
		Weight::from_parts(150_107_000, 0)
			.saturating_add(Weight::from_parts(0, 323492))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCommunities CommunityIdentifiers (r:1 w:0)
	/// Proof: EncointerCommunities CommunityIdentifiers (max_values: Some(1), max_size: Some(90002), added: 90497, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseeIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies EndorseeIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieRegistry (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputationLifetime (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputationLifetime (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ParticipantReputation (r:1 w:2)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCommunities Bootstrappers (r:1 w:0)
	/// Proof: EncointerCommunities Bootstrappers (max_values: None, max_size: Some(320027), added: 322502, mode: MaxEncodedLen)
	/// Storage: EncointerBalances TotalIssuance (r:1 w:0)
	/// Proof: EncointerBalances TotalIssuance (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	/// Storage: EncointerBalances DemurragePerBlock (r:1 w:0)
	/// Proof: EncointerBalances DemurragePerBlock (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies ReputableCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableRegistry (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	fn upgrade_registration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1140`
		//  Estimated: `323492`
		// Minimum execution time: 170_801_000 picoseconds.
		Weight::from_parts(177_027_000, 0)
			.saturating_add(Weight::from_parts(0, 323492))
			.saturating_add(T::DbWeight::get().reads(15))
			.saturating_add(T::DbWeight::get().writes(8))
	}
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCommunities CommunityIdentifiers (r:1 w:0)
	/// Proof: EncointerCommunities CommunityIdentifiers (max_values: Some(1), max_size: Some(90002), added: 90497, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputationLifetime (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputationLifetime (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ParticipantReputation (r:1 w:2)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableRegistry (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	fn unregister_participant() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `943`
		//  Estimated: `91487`
		// Minimum execution time: 62_897_000 picoseconds.
		Weight::from_parts(65_129_000, 0)
			.saturating_add(Weight::from_parts(0, 91487))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCommunities CommunityIdentifiers (r:1 w:0)
	/// Proof: EncointerCommunities CommunityIdentifiers (max_values: Some(1), max_size: Some(90002), added: 90497, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies MeetupCount (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies MeetupCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AssignmentCounts (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies AssignmentCounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies Assignments (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies Assignments (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableRegistry (r:8 w:0)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieRegistry (r:2 w:0)
	/// Proof Skipped: EncointerCeremonies NewbieRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCommunities Locations (r:2 w:0)
	/// Proof: EncointerCommunities Locations (max_values: None, max_size: Some(320032), added: 322507, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler PhaseDurations (r:1 w:0)
	/// Proof: EncointerScheduler PhaseDurations (max_values: None, max_size: Some(25), added: 2500, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler NextPhaseTimestamp (r:1 w:0)
	/// Proof: EncointerScheduler NextPhaseTimestamp (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies MeetupTimeOffset (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies MeetupTimeOffset (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies AttestationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies AttestationIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies MeetupParticipantCountVote (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies MeetupParticipantCountVote (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationRegistry (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies AttestationRegistry (max_values: None, max_size: None, mode: Measured)
	fn attest_attendees() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2137`
		//  Estimated: `646004`
		// Minimum execution time: 123_019_000 picoseconds.
		Weight::from_parts(126_476_000, 0)
			.saturating_add(Weight::from_parts(0, 646004))
			.saturating_add(T::DbWeight::get().reads(25))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: EncointerCommunities CommunityIdentifiers (r:1 w:0)
	/// Proof: EncointerCommunities CommunityIdentifiers (max_values: Some(1), max_size: Some(90002), added: 90497, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies ReputationLifetime (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputationLifetime (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies Endorsees (r:2 w:1)
	/// Proof Skipped: EncointerCeremonies Endorsees (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ParticipantReputation (r:2 w:0)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies BurnedReputableNewbieTickets (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies BurnedReputableNewbieTickets (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorsementTicketsPerReputable (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies EndorsementTicketsPerReputable (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseeCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseeCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseeIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseeIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieCount (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieRegistry (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCommunities Bootstrappers (r:1 w:0)
	/// Proof: EncointerCommunities Bootstrappers (max_values: None, max_size: Some(320027), added: 322502, mode: MaxEncodedLen)
	/// Storage: EncointerBalances TotalIssuance (r:1 w:0)
	/// Proof: EncointerBalances TotalIssuance (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	/// Storage: EncointerBalances DemurragePerBlock (r:1 w:0)
	/// Proof: EncointerBalances DemurragePerBlock (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies EndorseeRegistry (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseeRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseesCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseesCount (max_values: None, max_size: None, mode: Measured)
	fn endorse_newcomer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1130`
		//  Estimated: `323492`
		// Minimum execution time: 116_739_000 picoseconds.
		Weight::from_parts(119_393_000, 0)
			.saturating_add(Weight::from_parts(0, 323492))
			.saturating_add(T::DbWeight::get().reads(20))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerScheduler CurrentCeremonyIndex (r:1 w:0)
	/// Proof: EncointerScheduler CurrentCeremonyIndex (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies MeetupCount (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies MeetupCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AssignmentCounts (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies AssignmentCounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies Assignments (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies Assignments (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies BootstrapperIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies BootstrapperIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies IssuedRewards (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies IssuedRewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableRegistry (r:8 w:0)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieRegistry (r:2 w:0)
	/// Proof Skipped: EncointerCeremonies NewbieRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationIndex (r:10 w:0)
	/// Proof Skipped: EncointerCeremonies AttestationIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationRegistry (r:10 w:0)
	/// Proof Skipped: EncointerCeremonies AttestationRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies MeetupParticipantCountVote (r:10 w:0)
	/// Proof Skipped: EncointerCeremonies MeetupParticipantCountVote (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCommunities NominalIncome (r:1 w:0)
	/// Proof: EncointerCommunities NominalIncome (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies CeremonyReward (r:1 w:0)
	/// Proof Skipped: EncointerCeremonies CeremonyReward (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: EncointerBalances Balance (r:10 w:10)
	/// Proof: EncointerBalances Balance (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// Storage: EncointerBalances DemurragePerBlock (r:1 w:0)
	/// Proof: EncointerBalances DemurragePerBlock (max_values: None, max_size: Some(41), added: 2516, mode: MaxEncodedLen)
	/// Storage: EncointerBalances TotalIssuance (r:1 w:1)
	/// Proof: EncointerBalances TotalIssuance (max_values: None, max_size: Some(45), added: 2520, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies ParticipantReputation (r:0 w:10)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	fn claim_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `7649`
		//  Estimated: `33389`
		// Minimum execution time: 441_163_000 picoseconds.
		Weight::from_parts(455_147_000, 0)
			.saturating_add(Weight::from_parts(0, 33389))
			.saturating_add(T::DbWeight::get().reads(62))
			.saturating_add(T::DbWeight::get().writes(22))
	}
	/// Storage: EncointerCeremonies InactivityTimeout (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies InactivityTimeout (max_values: Some(1), max_size: None, mode: Measured)
	fn set_inactivity_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_151_000 picoseconds.
		Weight::from_parts(8_366_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerScheduler CurrentPhase (r:1 w:0)
	/// Proof: EncointerScheduler CurrentPhase (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: EncointerCeremonies MeetupTimeOffset (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies MeetupTimeOffset (max_values: Some(1), max_size: None, mode: Measured)
	fn set_meetup_time_offset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `73`
		//  Estimated: `1486`
		// Minimum execution time: 10_374_000 picoseconds.
		Weight::from_parts(10_844_000, 0)
			.saturating_add(Weight::from_parts(0, 1486))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies ReputationLifetime (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies ReputationLifetime (max_values: Some(1), max_size: None, mode: Measured)
	fn set_reputation_lifetime() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_514_000 picoseconds.
		Weight::from_parts(8_789_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies EndorsementTicketsPerBootstrapper (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorsementTicketsPerBootstrapper (max_values: Some(1), max_size: None, mode: Measured)
	fn set_endorsement_tickets_per_bootstrapper() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_173_000 picoseconds.
		Weight::from_parts(8_489_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies EndorsementTicketsPerReputable (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorsementTicketsPerReputable (max_values: Some(1), max_size: None, mode: Measured)
	fn set_endorsement_tickets_per_reputable() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_431_000 picoseconds.
		Weight::from_parts(8_612_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies TimeTolerance (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies TimeTolerance (max_values: Some(1), max_size: None, mode: Measured)
	fn set_time_tolerance() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_506_000 picoseconds.
		Weight::from_parts(8_655_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies LocationTolerance (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies LocationTolerance (max_values: Some(1), max_size: None, mode: Measured)
	fn set_location_tolerance() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 8_300_000 picoseconds.
		Weight::from_parts(8_793_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: EncointerCeremonies ReputableRegistry (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableRegistry (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableIndex (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ParticipantReputation (r:1 w:1)
	/// Proof Skipped: EncointerCeremonies ParticipantReputation (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies Assignments (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies Assignments (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies MeetupCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies MeetupCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies NewbieCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies NewbieCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies ReputableCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies ReputableCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AssignmentCounts (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies AssignmentCounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies BootstrapperCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies BootstrapperCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies AttestationCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies AttestationCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseeCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseeCount (max_values: None, max_size: None, mode: Measured)
	/// Storage: EncointerCeremonies EndorseesCount (r:0 w:1)
	/// Proof Skipped: EncointerCeremonies EndorseesCount (max_values: None, max_size: None, mode: Measured)
	fn purge_community_ceremony() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `641`
		//  Estimated: `4106`
		// Minimum execution time: 74_214_000 picoseconds.
		Weight::from_parts(76_621_000, 0)
			.saturating_add(Weight::from_parts(0, 4106))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(12))
	}
}
