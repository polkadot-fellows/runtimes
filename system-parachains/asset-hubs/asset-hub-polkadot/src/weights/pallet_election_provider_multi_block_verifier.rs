// Copyright (C) Parity Technologies and the various Polkadot contributors, see Contributions.md
// for a list of specific contributors.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_election_provider_multi_block::verifier`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 48.0.0
//! DATE: 2025-07-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ggwpez-ref-hw`, CPU: `AMD EPYC 7232P 8-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/production/wbuild/asset-hub-polkadot-runtime/asset_hub_polkadot_runtime.compact.compressed.wasm
// --extrinsic
// 
// --header
// .github/scripts/cmd/file_header.txt
// --output
// system-parachains/asset-hubs/asset-hub-polkadot/src/weights/
// --heap-pages=4096
// --pallet=pallet_staking_async,pallet_fast_unstake,pallet_bags_list,pallet_election_provider_multi_block,pallet_election_provider_multi_block::verifier,pallet_election_provider_multi_block_unsigned,pallet_election_provider_multi_block_signed

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]
#![allow(dead_code)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_election_provider_multi_block::verifier`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_election_provider_multi_block::verifier::WeightInfo for WeightInfo<T> {
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(653), added: 3128, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(46544), added: 49019, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:1 w:0)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:0 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionBackings` (r:0 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionBackings` (`max_values`: None, `max_size`: Some(52026), added: 54501, mode: `Measured`)
	fn on_initialize_valid_non_terminal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `369597`
		//  Estimated: `373062`
		// Minimum execution time: 5_262_150_000 picoseconds.
		Weight::from_parts(5_671_372_000, 0)
			.saturating_add(Weight::from_parts(0, 373062))
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(653), added: 3128, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:32 w:32)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(46544), added: 49019, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:1 w:0)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionBackings` (r:33 w:32)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionBackings` (`max_values`: None, `max_size`: Some(52026), added: 54501, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionScore` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionScore` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(181), added: 2656, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:0 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	fn on_initialize_valid_terminal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2070494`
		//  Estimated: `2153159`
		// Minimum execution time: 25_549_667_000 picoseconds.
		Weight::from_parts(26_029_812_000, 0)
			.saturating_add(Weight::from_parts(0, 2153159))
			.saturating_add(T::DbWeight::get().reads(79))
			.saturating_add(T::DbWeight::get().writes(72))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(653), added: 3128, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:32 w:32)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(46544), added: 49019, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:1 w:0)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionBackings` (r:33 w:32)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionBackings` (`max_values`: None, `max_size`: Some(52026), added: 54501, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(181), added: 2656, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:31 w:32)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	fn on_initialize_invalid_terminal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2071515`
		//  Estimated: `2154180`
		// Minimum execution time: 25_533_386_000 picoseconds.
		Weight::from_parts(26_026_125_000, 0)
			.saturating_add(Weight::from_parts(0, 2154180))
			.saturating_add(T::DbWeight::get().reads(109))
			.saturating_add(T::DbWeight::get().writes(101))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(653), added: 3128, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:32 w:32)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(46544), added: 49019, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5640fd84ada5e16d1b6739279282536c` (r:1 w:0)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:1 w:0)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:1 w:0)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:31 w:31)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionBackings` (r:31 w:31)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionBackings` (`max_values`: None, `max_size`: Some(52026), added: 54501, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(181), added: 2656, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x48384a816e4f71a936cb76dc9e303f2a` (r:1 w:0)
	/// The range of component `v` is `[0, 31]`.
	fn on_initialize_invalid_non_terminal(v: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `461848 + v * (72 ±0)`
		//  Estimated: `530959 + v * (2189 ±153)`
		// Minimum execution time: 1_124_784_000 picoseconds.
		Weight::from_parts(1_436_146_817, 0)
			.saturating_add(Weight::from_parts(0, 530959))
			.saturating_add(T::DbWeight::get().reads(45))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(v.into())))
			.saturating_add(T::DbWeight::get().writes(37))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(v.into())))
			.saturating_add(Weight::from_parts(0, 2189).saturating_mul(v.into()))
	}
}
