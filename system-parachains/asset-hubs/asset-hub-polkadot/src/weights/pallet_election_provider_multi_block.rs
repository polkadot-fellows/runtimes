// Copyright (C) Parity Technologies and the various Polkadot contributors, see Contributions.md
// for a list of specific contributors.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_election_provider_multi_block`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 51.0.0
//! DATE: 2025-10-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `d42fe91c0ecc`, CPU: `QEMU Virtual CPU version 2.5+`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --extrinsic=*
// --runtime=target/production/wbuild/asset-hub-polkadot-runtime/asset_hub_polkadot_runtime.wasm
// --pallet=pallet_election_provider_multi_block
// --header=/_work/ibp-gb/runtimes/runtimes/.github/scripts/cmd/file_header.txt
// --output=./system-parachains/asset-hubs/asset-hub-polkadot/src/weights
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --heap-pages=4096

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_election_provider_multi_block`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_election_provider_multi_block::WeightInfo for WeightInfo<T> {
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	fn on_initialize_nothing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `121`
		//  Estimated: `3586`
		// Minimum execution time: 8_110_000 picoseconds.
		Weight::from_parts(8_370_000, 0)
			.saturating_add(Weight::from_parts(0, 3586))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Staking::ValidatorCount` (r:1 w:0)
	/// Proof: `Staking::ValidatorCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `Staking::CounterForValidators` (r:1 w:0)
	/// Proof: `Staking::CounterForValidators` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `Staking::Validators` (r:2001 w:0)
	/// Proof: `Staking::Validators` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:0 w:1)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshotHash` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedTargetSnapshotHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	fn on_initialize_into_snapshot_msp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `95119`
		//  Estimated: `5048584`
		// Minimum execution time: 8_872_406_000 picoseconds.
		Weight::from_parts(8_957_555_000, 0)
			.saturating_add(Weight::from_parts(0, 5048584))
			.saturating_add(T::DbWeight::get().reads(2008))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `Staking::VoterSnapshotStatus` (r:1 w:1)
	/// Proof: `Staking::VoterSnapshotStatus` (`max_values`: Some(1), `max_size`: Some(33), added: 528, mode: `Measured`)
	/// Storage: `VoterList::CounterForListNodes` (r:1 w:0)
	/// Proof: `VoterList::CounterForListNodes` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `VoterList::ListBags` (r:1 w:0)
	/// Proof: `VoterList::ListBags` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `Measured`)
	/// Storage: `VoterList::ListNodes` (r:706 w:0)
	/// Proof: `VoterList::ListNodes` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `Measured`)
	/// Storage: `Staking::Bonded` (r:704 w:0)
	/// Proof: `Staking::Bonded` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `Measured`)
	/// Storage: `Staking::Ledger` (r:704 w:0)
	/// Proof: `Staking::Ledger` (`max_values`: None, `max_size`: Some(753), added: 3228, mode: `Measured`)
	/// Storage: `Staking::Nominators` (r:704 w:0)
	/// Proof: `Staking::Nominators` (`max_values`: None, `max_size`: Some(558), added: 3033, mode: `Measured`)
	/// Storage: `Staking::Validators` (r:216 w:0)
	/// Proof: `Staking::Validators` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Staking::MinimumActiveStake` (r:0 w:1)
	/// Proof: `Staking::MinimumActiveStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// Storage: `VoterList::Lock` (r:0 w:1)
	/// Proof: `VoterList::Lock` (`max_values`: Some(1), `max_size`: Some(0), added: 495, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshotHash` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedVoterSnapshotHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `Measured`)
	fn on_initialize_into_snapshot_rest() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1466742`
		//  Estimated: `3215082`
		// Minimum execution time: 21_007_131_000 picoseconds.
		Weight::from_parts(22_496_879_000, 0)
			.saturating_add(Weight::from_parts(0, 3215082))
			.saturating_add(T::DbWeight::get().reads(3042))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `Staking::VoterSnapshotStatus` (r:1 w:1)
	/// Proof: `Staking::VoterSnapshotStatus` (`max_values`: Some(1), `max_size`: Some(33), added: 528, mode: `Measured`)
	/// Storage: `VoterList::CounterForListNodes` (r:1 w:0)
	/// Proof: `VoterList::CounterForListNodes` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `VoterList::ListNodes` (r:706 w:0)
	/// Proof: `VoterList::ListNodes` (`max_values`: None, `max_size`: Some(154), added: 2629, mode: `Measured`)
	/// Storage: `Staking::Bonded` (r:704 w:0)
	/// Proof: `Staking::Bonded` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `Measured`)
	/// Storage: `Staking::Ledger` (r:704 w:0)
	/// Proof: `Staking::Ledger` (`max_values`: None, `max_size`: Some(753), added: 3228, mode: `Measured`)
	/// Storage: `Staking::Nominators` (r:704 w:0)
	/// Proof: `Staking::Nominators` (`max_values`: None, `max_size`: Some(558), added: 3033, mode: `Measured`)
	/// Storage: `VoterList::ListBags` (r:1 w:0)
	/// Proof: `VoterList::ListBags` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `Measured`)
	/// Storage: `Staking::Validators` (r:38 w:0)
	/// Proof: `Staking::Validators` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Staking::MinimumActiveStake` (r:0 w:1)
	/// Proof: `Staking::MinimumActiveStake` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// Storage: `VoterList::Lock` (r:0 w:1)
	/// Proof: `VoterList::Lock` (`max_values`: Some(1), `max_size`: Some(0), added: 495, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshotHash` (r:0 w:1)
	/// Proof: `MultiBlockElection::PagedVoterSnapshotHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `Measured`)
	fn on_initialize_into_signed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1536687`
		//  Estimated: `3285027`
		// Minimum execution time: 22_710_410_000 picoseconds.
		Weight::from_parts(24_335_439_000, 0)
			.saturating_add(Weight::from_parts(0, 3285027))
			.saturating_add(T::DbWeight::get().reads(2865))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	fn on_initialize_into_signed_validation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `3780`
		// Minimum execution time: 34_450_000 picoseconds.
		Weight::from_parts(37_151_000, 0)
			.saturating_add(Weight::from_parts(0, 3780))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	fn on_initialize_into_unsigned() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `6255`
		// Minimum execution time: 36_190_000 picoseconds.
		Weight::from_parts(40_091_000, 0)
			.saturating_add(Weight::from_parts(0, 6255))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:1 w:0)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `Staking::CurrentEra` (r:1 w:0)
	/// Proof: `Staking::CurrentEra` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `Staking::ElectableStashes` (r:1 w:1)
	/// Proof: `Staking::ElectableStashes` (`max_values`: Some(1), `max_size`: Some(32002), added: 32497, mode: `Measured`)
	/// Storage: `Staking::ErasStakersOverview` (r:587 w:587)
	/// Proof: `Staking::ErasStakersOverview` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `Measured`)
	/// Storage: `Staking::ErasTotalStake` (r:1 w:1)
	/// Proof: `Staking::ErasTotalStake` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `Measured`)
	/// Storage: `Staking::Validators` (r:587 w:0)
	/// Proof: `Staking::Validators` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `Measured`)
	/// Storage: `Staking::ErasValidatorPrefs` (r:0 w:587)
	/// Proof: `Staking::ErasValidatorPrefs` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `Measured`)
	/// Storage: `Staking::ErasStakersPaged` (r:0 w:587)
	/// Proof: `Staking::ErasStakersPaged` (`max_values`: None, `max_size`: Some(24656), added: 27131, mode: `Measured`)
	fn export_non_terminal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `176974`
		//  Estimated: `1630789`
		// Minimum execution time: 9_143_665_000 picoseconds.
		Weight::from_parts(9_448_836_000, 0)
			.saturating_add(Weight::from_parts(0, 1630789))
			.saturating_add(T::DbWeight::get().reads(1182))
			.saturating_add(T::DbWeight::get().writes(1764))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:1)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:1)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedValidVariant` (r:1 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedValidVariant` (`max_values`: None, `max_size`: Some(13), added: 2488, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionX` (r:32 w:32)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionX` (`max_values`: None, `max_size`: Some(33842026), added: 33844501, mode: `Measured`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshot` (r:32 w:32)
	/// Proof: `MultiBlockElection::PagedVoterSnapshot` (`max_values`: None, `max_size`: Some(389338), added: 391813, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedVoterSnapshotHash` (r:32 w:32)
	/// Proof: `MultiBlockElection::PagedVoterSnapshotHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshot` (r:1 w:1)
	/// Proof: `MultiBlockElection::PagedTargetSnapshot` (`max_values`: None, `max_size`: Some(64026), added: 66501, mode: `Measured`)
	/// Storage: `MultiBlockElection::PagedTargetSnapshotHash` (r:1 w:1)
	/// Proof: `MultiBlockElection::PagedTargetSnapshotHash` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `Measured`)
	/// Storage: `Staking::CurrentEra` (r:1 w:0)
	/// Proof: `Staking::CurrentEra` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `Staking::ElectableStashes` (r:1 w:1)
	/// Proof: `Staking::ElectableStashes` (`max_values`: Some(1), `max_size`: Some(32002), added: 32497, mode: `Measured`)
	/// Storage: `Staking::ErasStakersOverview` (r:598 w:598)
	/// Proof: `Staking::ErasStakersOverview` (`max_values`: None, `max_size`: Some(92), added: 2567, mode: `Measured`)
	/// Storage: `Staking::ErasStakersPaged` (r:598 w:598)
	/// Proof: `Staking::ErasStakersPaged` (`max_values`: None, `max_size`: Some(24656), added: 27131, mode: `Measured`)
	/// Storage: `Staking::ErasTotalStake` (r:1 w:1)
	/// Proof: `Staking::ErasTotalStake` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `Measured`)
	/// Storage: `Staking::Validators` (r:598 w:0)
	/// Proof: `Staking::Validators` (`max_values`: None, `max_size`: Some(45), added: 2520, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::StatusStorage` (r:0 w:1)
	/// Proof: `MultiBlockElectionVerifier::StatusStorage` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionVerifier::QueuedSolutionScore` (r:0 w:1)
	/// Proof: `MultiBlockElectionVerifier::QueuedSolutionScore` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `Measured`)
	/// Storage: `Staking::ErasValidatorPrefs` (r:0 w:598)
	/// Proof: `Staking::ErasValidatorPrefs` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `Measured`)
	/// Storage: `MultiBlockElection::DesiredTargets` (r:0 w:1)
	/// Proof: `MultiBlockElection::DesiredTargets` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `Measured`)
	fn export_terminal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4276840`
		//  Estimated: `5757880`
		// Minimum execution time: 19_463_491_000 picoseconds.
		Weight::from_parts(20_209_671_000, 0)
			.saturating_add(Weight::from_parts(0, 5757880))
			.saturating_add(T::DbWeight::get().reads(1899))
			.saturating_add(T::DbWeight::get().writes(1900))
	}
	fn manage() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 170_000 picoseconds.
		Weight::from_parts(190_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
	}
}
