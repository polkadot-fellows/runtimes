// Copyright (C) Parity Technologies and the various Polkadot contributors, see Contributions.md
// for a list of specific contributors.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_election_provider_multi_block_signed`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 50.0.0
//! DATE: 2025-09-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `fcde2c036da0`, CPU: `QEMU Virtual CPU version 2.5+`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --extrinsic=*
// --runtime=target/production/wbuild/asset-hub-kusama-runtime/asset_hub_kusama_runtime.wasm
// --pallet=pallet_election_provider_multi_block_signed
// --header=/_work/fellowship-001/runtimes/runtimes/.github/scripts/cmd/file_header.txt
// --output=./system-parachains/asset-hubs/asset-hub-kusama/src/weights
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --heap-pages=4096

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;
use pallet_election_provider_multi_block::weights::traits::pallet_election_provider_multi_block_signed;

/// Weight functions for `pallet_election_provider_multi_block_signed`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_election_provider_multi_block_signed::WeightInfo for WeightInfo<T> {
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:0)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::Invulnerables` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::Invulnerables` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:0 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	fn register_not_full() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3369`
		//  Estimated: `6834`
		// Minimum execution time: 108_381_000 picoseconds.
		Weight::from_parts(112_490_000, 0)
			.saturating_add(Weight::from_parts(0, 6834))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:0)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::Invulnerables` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::Invulnerables` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:2)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:16 w:16)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(76724), added: 79199, mode: `Measured`)
	fn register_eject() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `8216`
		//  Estimated: `48806`
		// Minimum execution time: 248_980_000 picoseconds.
		Weight::from_parts(259_340_000, 0)
			.saturating_add(Weight::from_parts(0, 48806))
			.saturating_add(T::DbWeight::get().reads(25))
			.saturating_add(T::DbWeight::get().writes(21))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:0)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::Invulnerables` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::Invulnerables` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(76724), added: 79199, mode: `Measured`)
	fn submit_page() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3886`
		//  Estimated: `7351`
		// Minimum execution time: 289_841_000 picoseconds.
		Weight::from_parts(307_110_000, 0)
			.saturating_add(Weight::from_parts(0, 7351))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:0)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::Invulnerables` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::Invulnerables` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x6f320d44e42312c78638e6c92dff65af` (r:1 w:0)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(76724), added: 79199, mode: `Measured`)
	fn unset_page() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `20039`
		//  Estimated: `23504`
		// Minimum execution time: 265_029_000 picoseconds.
		Weight::from_parts(289_230_000, 0)
			.saturating_add(Weight::from_parts(0, 23504))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `MultiBlockElection::CurrentPhase` (r:1 w:0)
	/// Proof: `MultiBlockElection::CurrentPhase` (`max_values`: Some(1), `max_size`: Some(5), added: 500, mode: `Measured`)
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:16 w:16)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(76724), added: 79199, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	fn bail() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4404`
		//  Estimated: `44994`
		// Minimum execution time: 163_960_000 picoseconds.
		Weight::from_parts(168_320_000, 0)
			.saturating_add(Weight::from_parts(0, 44994))
			.saturating_add(T::DbWeight::get().reads(22))
			.saturating_add(T::DbWeight::get().writes(19))
	}
	/// Storage: `MultiBlockElection::Round` (r:1 w:0)
	/// Proof: `MultiBlockElection::Round` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SortedScores` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SortedScores` (`max_values`: None, `max_size`: Some(1293), added: 3768, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x5fa6b11cf49311969aa152d95989a962` (r:1 w:0)
	/// Storage: `MultiBlockElectionSigned::SubmissionStorage` (r:16 w:16)
	/// Proof: `MultiBlockElectionSigned::SubmissionStorage` (`max_values`: None, `max_size`: Some(76724), added: 79199, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::SubmissionMetadataStorage` (r:1 w:1)
	/// Proof: `MultiBlockElectionSigned::SubmissionMetadataStorage` (`max_values`: None, `max_size`: Some(165), added: 2640, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `Measured`)
	/// Storage: `MultiBlockElectionSigned::Invulnerables` (r:1 w:0)
	/// Proof: `MultiBlockElectionSigned::Invulnerables` (`max_values`: Some(1), `max_size`: Some(513), added: 1008, mode: `Measured`)
	/// The range of component `p` is `[1, 16]`.
	fn clear_old_round_data(p: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3775 + p * (40 ±0)`
		//  Estimated: `7239 + p * (2516 ±0)`
		// Minimum execution time: 105_170_000 picoseconds.
		Weight::from_parts(107_295_242, 0)
			.saturating_add(Weight::from_parts(0, 7239))
			// Standard Error: 24_222
			.saturating_add(Weight::from_parts(2_493_044, 0).saturating_mul(p.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(p.into())))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p.into())))
			.saturating_add(Weight::from_parts(0, 2516).saturating_mul(p.into()))
	}
}
