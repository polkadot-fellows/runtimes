
//! Autogenerated weights for `pallet_ranked_collective`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 45.0.0
//! DATE: 2025-01-27, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Jesses-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --pallet
// pallet-ranked-collective
// --extrinsic
// 
// --runtime
// ./target/release/wbuild/collectives-polkadot-runtime/collectives_polkadot_runtime.compact.compressed.wasm
// --output
// ./system-parachains/collectives/collectives-polkadot/src/weights/pallet_ranked_collective_potoc_collective.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_ranked_collective`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_ranked_collective::WeightInfo for WeightInfo<T> {
	/// Storage: `PotocCollective::Members` (r:1 w:1)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::MemberCount` (r:1 w:1)
	/// Proof: `PotocCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IndexToId` (r:0 w:1)
	/// Proof: `PotocCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IdToIndex` (r:0 w:1)
	/// Proof: `PotocCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	fn add_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `3507`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `PotocCollective::Members` (r:1 w:1)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::MemberCount` (r:11 w:11)
	/// Proof: `PotocCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IdToIndex` (r:11 w:22)
	/// Proof: `PotocCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IndexToId` (r:11 w:22)
	/// Proof: `PotocCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn remove_member(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `551 + r * (281 ±0)`
		//  Estimated: `3519 + r * (2529 ±0)`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(30_129_934, 0)
			.saturating_add(Weight::from_parts(0, 3519))
			// Standard Error: 10_709
			.saturating_add(Weight::from_parts(14_208_126, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((5_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2529).saturating_mul(r.into()))
	}
	/// Storage: `PotocCollective::Members` (r:1 w:1)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::MemberCount` (r:1 w:1)
	/// Proof: `PotocCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IndexToId` (r:0 w:1)
	/// Proof: `PotocCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IdToIndex` (r:0 w:1)
	/// Proof: `PotocCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn promote_member(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + r * (17 ±0)`
		//  Estimated: `3507`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_693_801, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			// Standard Error: 4_572
			.saturating_add(Weight::from_parts(403_878, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `PotocCollective::Members` (r:1 w:1)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::MemberCount` (r:1 w:1)
	/// Proof: `PotocCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IdToIndex` (r:1 w:2)
	/// Proof: `PotocCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IndexToId` (r:1 w:2)
	/// Proof: `PotocCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn demote_member(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `566 + r * (72 ±0)`
		//  Estimated: `3519`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(30_467_446, 0)
			.saturating_add(Weight::from_parts(0, 3519))
			// Standard Error: 10_866
			.saturating_add(Weight::from_parts(538_913, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `PotocCollective::Members` (r:1 w:0)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocReferenda::ReferendumInfoFor` (r:1 w:1)
	/// Proof: `PotocReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::Voting` (r:1 w:1)
	/// Proof: `PotocCollective::Voting` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Agenda` (r:2 w:2)
	/// Proof: `Scheduler::Agenda` (`max_values`: None, `max_size`: Some(155814), added: 158289, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Retries` (r:0 w:1)
	/// Proof: `Scheduler::Retries` (`max_values`: None, `max_size`: Some(30), added: 2505, mode: `MaxEncodedLen`)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `634`
		//  Estimated: `317568`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 0)
			.saturating_add(Weight::from_parts(0, 317568))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `PotocReferenda::ReferendumInfoFor` (r:1 w:0)
	/// Proof: `PotocReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::VotingCleanup` (r:1 w:0)
	/// Proof: `PotocCollective::VotingCleanup` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::Voting` (r:100 w:100)
	/// Proof: `PotocCollective::Voting` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 100]`.
	/// The range of component `n` is `[0, 100]`.
	/// The range of component `n` is `[0, 100]`.
	fn cleanup_poll(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `468 + n * (50 ±0)`
		//  Estimated: `4365 + n * (2540 ±0)`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(17_058_439, 0)
			.saturating_add(Weight::from_parts(0, 4365))
			// Standard Error: 1_869
			.saturating_add(Weight::from_parts(1_124_466, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2540).saturating_mul(n.into()))
	}
	/// Storage: `PotocCollective::Members` (r:2 w:2)
	/// Proof: `PotocCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::MemberCount` (r:2 w:2)
	/// Proof: `PotocCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IdToIndex` (r:2 w:4)
	/// Proof: `PotocCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `PotocCore::Member` (r:2 w:2)
	/// Proof: `PotocCore::Member` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `PotocCore::MemberEvidence` (r:1 w:0)
	/// Proof: `PotocCore::MemberEvidence` (`max_values`: None, `max_size`: Some(65581), added: 68056, mode: `MaxEncodedLen`)
	/// Storage: `PotocSalary::Claimant` (r:2 w:2)
	/// Proof: `PotocSalary::Claimant` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `PotocCollective::IndexToId` (r:0 w:2)
	/// Proof: `PotocCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	fn exchange_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `703`
		//  Estimated: `69046`
		// Minimum execution time: 65_000_000 picoseconds.
		Weight::from_parts(67_000_000, 0)
			.saturating_add(Weight::from_parts(0, 69046))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(14))
	}
}
