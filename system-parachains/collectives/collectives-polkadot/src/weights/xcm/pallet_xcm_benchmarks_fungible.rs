// Copyright (C) Parity Technologies and the various Polkadot contributors, see Contributions.md
// for a list of specific contributors.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_xcm_benchmarks::fungible`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2025-01-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ggwpez-ref-hw`, CPU: `AMD EPYC 7232P 8-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("./collectives-polkadot-chain-spec.json")`, DB CACHE: 1024

// Executed Command:
// ./target/production/polkadot-parachain
// benchmark
// pallet
// --chain=./collectives-polkadot-chain-spec.json
// --steps=50
// --repeat=20
// --pallet=pallet_xcm_benchmarks::fungible
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./collectives-polkadot-weights/xcm/pallet_xcm_benchmarks_fungible.rs
// --header=./file_header.txt

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_xcm_benchmarks::fungible`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo<T> {
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    pub(crate) fn withdraw_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `101`
        //  Estimated: `3593`
        // Minimum execution time: 40_160_000 picoseconds.
        Weight::from_parts(40_961_000, 0)
            .saturating_add(Weight::from_parts(0, 3593))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    pub(crate) fn transfer_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `153`
        //  Estimated: `6196`
        // Minimum execution time: 54_831_000 picoseconds.
        Weight::from_parts(55_110_000, 0)
            .saturating_add(Weight::from_parts(0, 6196))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `System::Account` (r:3 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    /// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
    /// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
    /// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    pub(crate) fn transfer_reserve_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `264`
        //  Estimated: `8799`
        // Minimum execution time: 109_430_000 picoseconds.
        Weight::from_parts(111_451_000, 0)
            .saturating_add(Weight::from_parts(0, 8799))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    pub(crate) fn reserve_asset_deposited() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
            .saturating_add(Weight::from_parts(0, 0))
    }
    /// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
    /// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
    /// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `System::Account` (r:2 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    pub(crate) fn initiate_reserve_withdraw() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `212`
        //  Estimated: `6196`
        // Minimum execution time: 69_691_000 picoseconds.
        Weight::from_parts(70_671_000, 0)
            .saturating_add(Weight::from_parts(0, 6196))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    pub(crate) fn receive_teleported_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_250_000 picoseconds.
        Weight::from_parts(3_550_000, 0)
            .saturating_add(Weight::from_parts(0, 0))
    }
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    pub(crate) fn deposit_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `52`
        //  Estimated: `3593`
        // Minimum execution time: 30_060_000 picoseconds.
        Weight::from_parts(30_570_000, 0)
            .saturating_add(Weight::from_parts(0, 3593))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
    /// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
    /// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    pub(crate) fn deposit_reserve_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `163`
        //  Estimated: `3628`
        // Minimum execution time: 74_150_000 picoseconds.
        Weight::from_parts(74_821_000, 0)
            .saturating_add(Weight::from_parts(0, 3628))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `ParachainInfo::ParachainId` (r:1 w:0)
    /// Proof: `ParachainInfo::ParachainId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `ParachainSystem::UpwardDeliveryFeeFactor` (r:1 w:0)
    /// Proof: `ParachainSystem::UpwardDeliveryFeeFactor` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `PolkadotXcm::SupportedVersion` (r:1 w:0)
    /// Proof: `PolkadotXcm::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::HostConfiguration` (r:1 w:0)
    /// Proof: `ParachainSystem::HostConfiguration` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `ParachainSystem::PendingUpwardMessages` (r:1 w:1)
    /// Proof: `ParachainSystem::PendingUpwardMessages` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    pub(crate) fn initiate_teleport() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `111`
        //  Estimated: `3576`
        // Minimum execution time: 32_130_000 picoseconds.
        Weight::from_parts(32_600_000, 0)
            .saturating_add(Weight::from_parts(0, 3576))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(1))
    }
}
