[package]
authors.workspace = true
build = "build.rs"
description = "Runtime of the Kusama Network"
edition.workspace = true
license.workspace = true
name = "staging-kusama-runtime"
repository.workspace = true
version.workspace = true

[dependencies]
parity-scale-codec = { features = ["derive", "max-encoded-len"] , workspace = true }
scale-info = { features = ["derive"] , workspace = true }
log = { workspace = true }

authority-discovery-primitives = { package = "sp-authority-discovery", default-features = false , version = "27.0.0" }
babe-primitives = { package = "sp-consensus-babe", default-features = false , version = "0.33.0" }
beefy-primitives = { package = "sp-consensus-beefy", default-features = false , version = "14.0.0" }
binary-merkle-tree = { workspace = true }
kusama-runtime-constants = { package = "kusama-runtime-constants", path = "constants", default-features = false }
sp-api = { workspace = true }
inherents = { package = "sp-inherents", default-features = false , version = "27.0.0" }
offchain-primitives = { package = "sp-offchain", default-features = false , version = "27.0.0" }
sp-std = { workspace = true }
sp-application-crypto = { workspace = true }
sp-arithmetic = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-core = { workspace = true }
sp-session = { workspace = true }
sp-storage = { workspace = true }
sp-version = { workspace = true }
tx-pool-api = { package = "sp-transaction-pool", default-features = false , version = "27.0.0" }
block-builder-api = { package = "sp-block-builder", default-features = false , version = "27.0.0" }
sp-npos-elections = { workspace = true }

pallet-asset-rate = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-babe = { workspace = true }
pallet-bags-list = { workspace = true }
pallet-balances = { workspace = true }
pallet-beefy = { workspace = true }
pallet-beefy-mmr = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-nomination-pools-runtime-api = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-election-provider-multi-phase = { workspace = true }
pallet-fast-unstake = { workspace = true }
frame-executive = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-nis = { workspace = true }
pallet-identity = { workspace = true }
pallet-indices = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-mmr = { workspace = true }
pallet-multisig = { workspace = true }
pallet-nomination-pools = { workspace = true }
pallet-offences = { workspace = true }
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-ranked-collective = { workspace = true }
pallet-recovery = { workspace = true }
pallet-referenda = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-session = { workspace = true }
pallet-society = { workspace = true }
frame-support = { features = [ "tuples-96" ] , workspace = true }
pallet-staking = { workspace = true }
pallet-staking-runtime-api = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
pallet-vesting = { workspace = true }
pallet-whitelist = { workspace = true }
pallet-xcm = { workspace = true }
pallet-xcm-benchmarks = { optional = true , workspace = true }
frame-election-provider-support = { workspace = true }

frame-benchmarking = { optional = true , workspace = true }
frame-try-runtime = { optional = true , workspace = true }
pallet-offences-benchmarking = { optional = true , workspace = true }
pallet-session-benchmarking = { optional = true , workspace = true }
pallet-nomination-pools-benchmarking = { optional = true , workspace = true }
frame-system-benchmarking = { optional = true , workspace = true }
pallet-election-provider-support-benchmarking = { optional = true , workspace = true }
hex-literal = { workspace = true }

runtime-common = { package = "polkadot-runtime-common", default-features = false, version = "8.0.1" }
runtime-parachains = { package = "polkadot-runtime-parachains", default-features = false , version = "8.0.1" }
primitives = { package = "polkadot-primitives", default-features = false , version = "8.0.1" }

xcm = { package = "staging-xcm", default-features = false , version = "8.0.1" }
xcm-executor = { package = "staging-xcm-executor", default-features = false , version = "8.0.1" }
xcm-builder = { package = "staging-xcm-builder", default-features = false , version = "8.0.1" }

sp-debug-derive = { workspace = true }

[dev-dependencies]
keyring = { package = "sp-keyring", version = "32.0.0" }
sp-trie = { workspace = true }
separator = { workspace = true }
serde_json = { workspace = true }
remote-externalities = { package = "frame-remote-externalities", version = "0.36.0" }
tokio = { features = ["macros"] , workspace = true }
sp-tracing = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = [ "std" ]
no_std = []
only-staking = []
std = [
	"authority-discovery-primitives/std",
	"babe-primitives/std",
	"beefy-primitives/std",
	"binary-merkle-tree/std",
	"block-builder-api/std",
	"frame-benchmarking?/std",
	"frame-election-provider-support/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"inherents/std",
	"kusama-runtime-constants/std",
	"log/std",
	"offchain-primitives/std",
	"pallet-asset-rate/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-beefy-mmr/std",
	"pallet-beefy/std",
	"pallet-bounties/std",
	"pallet-child-bounties/std",
	"pallet-conviction-voting/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-election-provider-support-benchmarking?/std",
	"pallet-fast-unstake/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-indices/std",
	"pallet-message-queue/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-nis/std",
	"pallet-nomination-pools-benchmarking?/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-nomination-pools/std",
	"pallet-offences-benchmarking?/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-ranked-collective/std",
	"pallet-recovery/std",
	"pallet-referenda/std",
	"pallet-scheduler/std",
	"pallet-session-benchmarking?/std",
	"pallet-session/std",
	"pallet-society/std",
	"pallet-staking-runtime-api/std",
	"pallet-staking/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-utility/std",
	"pallet-vesting/std",
	"pallet-whitelist/std",
	"pallet-xcm-benchmarks?/std",
	"pallet-xcm/std",
	"parity-scale-codec/std",
	"primitives/std",
	"runtime-common/std",
	"runtime-parachains/std",
	"scale-info/std",
	"sp-api/std",
	"sp-application-crypto/std",
	"sp-arithmetic/std",
	"sp-core/std",
	"sp-debug-derive/std",
	"sp-genesis-builder/std",
	"sp-io/std",
	"sp-npos-elections/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-staking/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-tracing/std",
	"sp-version/std",
	"tx-pool-api/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-election-provider-support/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-asset-rate/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-mmr/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nis/runtime-benchmarks",
	"pallet-nomination-pools-benchmarking/runtime-benchmarks",
	"pallet-nomination-pools/runtime-benchmarks",
	"pallet-offences-benchmarking/runtime-benchmarks",
	"pallet-offences/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-ranked-collective/runtime-benchmarks",
	"pallet-recovery/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-session-benchmarking/runtime-benchmarks",
	"pallet-society/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-whitelist/runtime-benchmarks",
	"pallet-xcm-benchmarks/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"primitives/runtime-benchmarks",
	"runtime-common/runtime-benchmarks",
	"runtime-parachains/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-staking/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
]
try-runtime = [
	"frame-election-provider-support/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-asset-rate/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-beefy-mmr/try-runtime",
	"pallet-beefy/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-fast-unstake/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-mmr/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nis/try-runtime",
	"pallet-nomination-pools/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-ranked-collective/try-runtime",
	"pallet-recovery/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-session/try-runtime",
	"pallet-society/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-whitelist/try-runtime",
	"pallet-xcm/try-runtime",
	"runtime-common/try-runtime",
	"runtime-parachains/try-runtime",
	"sp-runtime/try-runtime",
]

# A feature that should be enabled when the runtime should be built for on-chain
# deployment. This will disable stuff that shouldn't be part of the on-chain wasm
# to make it smaller, like logging for example.
on-chain-release-build = [ "sp-api/disable-logging" ]

# Set timing constants (e.g. session period) to faster versions to speed up testing.
fast-runtime = []

runtime-metrics = [ "runtime-parachains/runtime-metrics", "sp-io/with-tracing" ]

force-debug = [ "sp-debug-derive/force-debug" ]
